{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "S3Bucket": {
      "Type": "String"
    },
    "TableName": {
      "Type": "String"
    },
    "DomainName": {
      "Type": "String"
    }
  },
  "Resources": {
    "ResetPasswordLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "ResetPasswordLambda",
        "Handler": "ResetPasswordLambda::handleRequest",
        "Role": {
          "Fn::GetAtt": [
            "ResetPasswordLambdaRole",
            "Arn"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "S3Bucket"
          },
          "S3Key": "lambda.zip"
        },
        "Environment": {
          "Variables": {
            "DynamoDBEndPoint": "dynamodb.us-east-1.amazonaws.com",
            "ttlInMin": "20",
            "domain": {
              "Ref": "DomainName"
            }
          }
        },
        "Runtime": "java8",
        "ReservedConcurrentExecutions": 5,
        "MemorySize": 256,
        "Timeout": "900"
      }
    },
    "ResetPasswordLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "ResetPasswordLambdaRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          {
            "Ref": "LambdaDynamoDBSesAccessPolicy"
          },
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "LambdaDynamoDBSesAccessPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": "lambda-dynamoDB-ses-accessPolicy",
        "Description": "Policy for lambda to access dynamoDB and ec2",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:Query"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "TableName"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      }
    },
    "PasswordReset": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "ResetPasswordLambda",
                "Arn"
              ]
            },
            "Protocol": "lambda"
          }
        ],
        "TopicName": "reset_password"
      }
    },
    "SNStopicpolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:Publish",
                "SNS:DeleteTopic",
                "SNS:ListSubscriptionsByTopic",
                "SNS:GetTopicAttributes",
                "SNS:Receive",
                "SNS:AddPermission",
                "SNS:Subscribe"
              ],
              "Resource": {
                "Ref": "PasswordReset"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": {
                    "Ref": "AWS::AccountId"
                  }
                }
              }
            }
          ]
        },
        "Topics": [
          {
            "Ref": "PasswordReset"
          }
        ]
      }
    },
    "PasswordResetLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "ResetPasswordLambda"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "PasswordReset"
        }
      }
    }
  }
}
